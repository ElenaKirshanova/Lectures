
Интро: 
Наверняка каждый из нас хоть раз задумывался о том, имеет ли кто-нибудь посторонний доступ к нашим сообщениям в мессенджерах. В этой мини-лекции вы узнаете о протоколе, обеспечивающем безопасный обмен сообщениями.

Слайд №1
Поговорим сперва в том, что мы понимаем под безопасным мессенджером. Во-первых, мы ожидаем, что с его помощью мы сможем обмениваться сообщениями как между двумя людьми, так и в группе, то есть в чатах. 
Какие требования мы выдвигаем к "безопасному мессенджеру"? Этот список довольно длинный. Очевидно, мы попросим корректную передачу сообщений: при наличии интернет соединения, сообщения должны быть отправлены и получены.
Конфиденциальность: атакующий не получает никакой информации о переданных сообщениях, в случае если ни одна из сторон не скомпрометирована.
Аутентификация: атакующий не может изменить, продублировать или вставить новое сообщение.
Стойкость к потере сообщений: в случае утраты сообщения, коммуникация продолжается. То есть если кто-то из участников оказался вне зоны интернет соединения, а затем вернулся в зону доступа, он будет получит непрочитанные сообщения.
Менее очевидные для обычного пользователя требования, тем не менее важные для безопасности это Прямая секретность (forward secrecy) и Безопасность после компрометации. Первое означает, что в случае, если аккаунт одного из пользователя будет взлома (в случае с мессенджерами -- злоумышленник получит доступ к телефону пользователя), то все сообщения, переданные до компрометации остаются конфиденциальны.   Безопасность после компрометации гарантирует, что стороны могут возобновить конфиденциальность после компрометации.

Много требований, но можем ли мы их все реализовать? 

Слайд№2
Ответ: можем. Для решения всех этих задач существует так называемый протокол Signal, сейчас активно поддерживаемый и обновляемый. На нем основан одноименный мессенджер Signal (не очень популярный в России), гораздо более известный WhatsApp, мессенджер Facebook и Skype. К слову, несмотря на то, что Signal не пользуется спросом в России, с точки зрения безопасности, с точки зрения криптографических решений, Signal является передовым мессенджером из всего списка (это не реклама =))

Важное преимущество этого протокола состоит в том, что его код и спецификация находятся в открытом доступе. Это важно для анализа безопасности протокола. В самом протоколе реализован так называемый гибридный подход к шифрованию данных: стороны вначале генерируют общий секретный ключ, а затем, с помощью этого ключа шифруют свои сообщения.

Слайд № 3
Здесь схема передачи сообщений между двумя сторонами представлена более подробно. В Signal стороны разделяются на Отправителя и Получается. Отправитель инициирует процесс генерации общего ключа k. Это классический криптографический алгоритм. Как только ключ сформирован, сторона А, отправитель, шифрует свои сообщения и пересылает их получателю B. Он в свою очередь, может дешифровать полученные сообщения.
Если A и В хотят поменяться ролями (то есть если B пишет ответ A), B инициирует генерацию нового ключа и весь процесс повторяется заново. 
Кстати, именно это свойство генерации новых ключей всякий раз, когда А и В меняются ролями и позволяет достичь тех двух экзотических свойств, упомянутых ранее: Прямая секретность (forward secrecy) и Безопасность после компрометации.

Слайд №4
Такого рода метод шифрования, как в Signal, называется Сквозным или End-to-End шифрованием. Есть суть состоит в том, что данные между пользователями передаются в зашифрованном виде, а сервер (или оператор связи) лишь передает эти зашифрованные данные от A к В. То есть основная задача сервера -- маршрутизировать сообщения, при этом не зная их содержания.

Слайд №5
Мы поговорили о передаче сообщений между двумя сторонами. А как выглядит процесс в групповых сообщениях? С точки зрения криптографии, обеспечение безопасного чата с тремя и более людьми -- задача, значительно сложнее, чем обеспечение безопасной передачи сообщений между двумя сторонами. В протоколе Signal безопасный чат реализован следующим образом. Каждый пользователь, генерирует свой ключ, с помощью которого все сообщения, посланный этим пользователе в чат, будут зашифрованы на его ключе. Для этого все пользователи отправляют всем пользователям свои ключи. Очевиден недостаток: нам необходимо хранить большое число ключей (их число == числу пользователей в чате). На сегодняшний день, более элегантного и безопасного метода обмена сообщениями между несколькими людьми у нас нет.

Слайд №6.
Отсюда несложно догадаться, как происходит добавление нового участника в чат. Тот участник чата, кто добавляет нового пользователя, делает запрос другим участникам чата о рассылке ключей. Каждый старый участник чата пересылает свой ключ новому участнику E свой ключ, и получает от E его ключ. Детали реализации безопасных чатов зависят от приложения: в WhatsApp есть свои особенности, в Signal они свои.  

